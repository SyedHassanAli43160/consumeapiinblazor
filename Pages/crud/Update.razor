@page "/edit/{Id}"
@using Flurl.Http;
@using Newtonsoft.Json;
@using consumeapiinblazor.Data
@using consumeapiinblazor.helper
@inject NavigationManager nav
@inject HttpClient Http
<h3>update</h3>
<div class="row">
    <div class="col-md-4">
        <form action="/iindex" >
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
           
            <div class="form-group">
                <label class="control-label">Name</label>
                <input @bind-value="@userinfo.Name" class="form-control" />

            </div>
            <div class="form-group">
                <label  class="control-label">Email</label>
                <input @bind-value="@userinfo.Email" class="form-control" />
               
            </div>
            <div class="form-group mt-3">
                <button type="submit" @onclick="(async () => await update(userinfo))" class="btn btn-primary">Update</button>
            </div>
        </form>
        <a href="/iindex">Back To Home</a>
    </div>
</div>
@code {

    userapi _Api = new userapi();
    user userinfo = new();
    [Parameter]
    public string Id { get; set; }
    public async Task update(user users)
    {
        users.Id = Convert.ToInt32(Id);
        //userinfo=users;

        HttpClient client = _Api.initial();
        HttpResponseMessage res = await client.GetAsync($"user/Getuserbyid?id={Id}");
        var response = await client.PutAsJsonAsync($"user/putasync/{Id}",users);
        var result = res.Content.ReadAsStringAsync().Result;
        userinfo = JsonConvert.DeserializeObject<user>(result);
        if (response.IsSuccessStatusCode)
        {

            nav.NavigateTo("/iindex");
        }
       
        }
    protected override async Task OnInitializedAsync()
    {
        var user = new user();

        await update(userinfo);

    }
}
